name: Fetch and Update Gothamist Links

on:
  schedule:
    # 11:15‚Äì21:15 UTC = 7:15am‚Äì5:15pm EDT hourly
    - cron: "15 11-21 * * *"
    # 23:15, 1:15, 3:15, 5:15, 7:15 UTC = 7:15pm‚Äì3:15am EDT (every 2 hrs)
    - cron: "15 23,1,3,5,7 * * *"
  workflow_dispatch:

jobs:
  fetch-links:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Fetch and write Gothamist links to JSON
        run: |
          set -e

          GOTHAMIST_API_URL="https://api-prod.gothamist.com/api/v2/pages/?type=news.ArticlePage&fields=title,url&order=-publication_date&show_on_index_listing=true&limit=3&tag_slug=politics"
          OUTPUT_PATH="gothamist-links.json"

          echo "üì° Fetching data from API..."

          # Fetch the raw response
          RESPONSE=$(curl -s "$GOTHAMIST_API_URL")

          # Log the raw response for debugging
          echo "Raw API Response: $RESPONSE"

          # Check if the response is valid JSON
          if ! echo "$RESPONSE" | jq empty; then
            echo "‚ùå Invalid JSON response from the API"
            exit 1
          fi

          # Parse the response (accessing items)
          ITEMS=$(echo "$RESPONSE" | jq -r '.items')

          if [ "$ITEMS" = "null" ]; then
            echo "‚ùå API response does not contain a '.items' array"
            exit 1
          fi

          # Convert to array of {text, href}
          LINKS=$(echo "$RESPONSE" | jq '[.items[] | {text: .title, href: .url}]')

          # Validate: Exactly 3 links
          COUNT=$(echo "$LINKS" | jq 'length')
          if [ "$COUNT" -ne 3 ]; then
            echo "‚ùå Expected exactly 3 links, but got $COUNT"
            exit 1
          fi

          # Validate: text and href minimum length
          for field in text href; do
            SHORT_COUNT=$(echo "$LINKS" | jq "[.[] | select(.$field | length < 5)] | length")
            if [ "$SHORT_COUNT" -gt 0 ]; then
              echo "‚ùå One or more '$field' values are too short"
              exit 1
            fi
          done

          # Only write/commit if content changed
          if [ -f "$OUTPUT_PATH" ] && diff <(echo "$LINKS") "$OUTPUT_PATH" > /dev/null; then
            echo "‚úÖ No changes to write"
            exit 0
          fi

          echo "$LINKS" > "$OUTPUT_PATH"
          echo "‚úÖ Wrote new links to $OUTPUT_PATH"

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add "$OUTPUT_PATH"
          git commit -m "Update Gothamist links JSON [auto]" || echo "‚ö†Ô∏è Nothing to commit"
          git push

      - name: Done
        run: echo "üéâ Gothamist links JSON updated successfully"
